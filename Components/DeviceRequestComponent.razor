@using Blazor.Bluetooth
@inherits BindableBase

<div class="form-group" style="background: #FDEDEC;">

    <div class="form-group">
        <label>
            Allow filter:
        </label>
        <input type="checkbox" @bind-value:event="onchange" @bind-value="AddFilter" />
    </div>

    @if (AddFilter)
    {
        <div class="form-group">
            <label>
                AcceptAllDevices:
            </label>
            <input type="checkbox" @bind-value:event="onchange" @bind-value="Options.AcceptAllDevices" />
        </div>


        <div class="form-group">
            <button class="btn btn-outline-success" onclick="@(() => AddNewFilter())" type="button">Add filter</button>
            @if (Options.Filters != null)
            {
                @foreach (var filter in Options.Filters)
                {
                    Filter thisFilter = filter;
                    <div class="form-group">
                        <button class="btn btn-outline-danger" onclick="@(() => RemoveFilter(thisFilter))" type="button">Remove filter</button>

                        <div>
                            <label>
                                Name
                                <input type="text" @bind-value:event="onchange" @bind-value="thisFilter.Name" />
                            </label>
                        </div>

                        <div>
                            <label>
                                NamePrefix
                                <input type="text" @bind-value:event="onchange" @bind-value="thisFilter.NamePrefix" />
                            </label>
                        </div>
                        
                        <!-- Services -->

                        <div class="form-group" style="background: #F5EEF8;">
                            <p>Services: </p>
                            <button class="btn btn-outline-success" onclick="@(() => AddService(thisFilter))" type="button">Add Service</button>

                            @if (thisFilter.Services != null)
                            {
                                @for (var i = 0; i < thisFilter.Services.Count; i++)
                                {
                                    var localI = i;
                                    <div>
                                        <button class="btn btn-outline-danger" onclick="@(() => RemoveService(thisFilter, localI))" type="button">Remove Service</button>

                                        <label>
                                            Service:
                                            <input type="text" value="@thisFilter.Services[localI]" @oninput="arg => OnServiceTextChanged(thisFilter, localI, arg)" />
                                        </label>
                                    </div>
                                }
                            }
                        </div>
                        
                        <!-- Manufacturer data -->

                        <div class="form-group" style="background: #FEF5E7;">
                            <p>ManufacturerData: </p>
                            <button class="btn btn-outline-success" onclick="@(() => AddManufacturerData(thisFilter))" type="button">Add Manufacturer data</button>

                            @if (thisFilter.ManufacturerData != null)
                            {
                                @foreach (var manufacturerData in thisFilter.ManufacturerData)
                                {
                                    ManufacturerData thisManData = manufacturerData;
                                    <div class="form-group">
                                        <button class="btn btn-outline-danger" onclick="@(() => RemoveManufacturerData(thisFilter, thisManData))" type="button">Remove ManufactureData</button>

                                        <div class="form-group">
                                            <label>
                                                CompanyIdentifier:
                                                <input type="number" @bind-value:event="onchange" @bind-value="thisManData.CompanyIdentifier" />
                                            </label>
                                        </div>
                                        <!--
                                        <div class="form-group">
                                            <label>
                                                DataPrefix: (NOT IMPLEMENTED)
                                                <input type="number" @bind-value:event="onchange" @bind-value="thisManData.DataPrefix" />
                                            </label>
                                        </div>

                                        <div class="form-group">
                                            <label>
                                                Mask: (NOT IMPLEMENTED)
                                                <input type="number" @bind-value:event="onchange" @bind-value="thisManData.Mask" />
                                            </label>
                                        </div> -->
                                    </div>
                                }
                            }
                        </div>
                    </div>
                }
            }
        </div>

        <!--  Optional Manufacturer data -->

        <div class="form-group" style="background: #FEF5E7;">
            <p>OptionalManufacturerData: </p>
            <button class="btn btn-outline-success" onclick="@(() => AddManufacturerData())" type="button">Add Optional Manufacturer data</button>

            @if (Options.OptionalManufacturerData != null)
            {
                @foreach (var manufacturerData in Options.OptionalManufacturerData)
                {
                    ManufacturerData thisManData = manufacturerData;
                    <div class="form-group">
                        <button class="btn btn-outline-danger" onclick="@(() => RemoveManufacturerData(thisManData))" type="button">Remove ManufactureData</button>

                        <div class="form-group">
                            <label>
                                CompanyIdentifier:
                                <input type="number" @bind-value:event="onchange" @bind-value="thisManData.CompanyIdentifier" />
                            </label>
                        </div>
                        <!--
                        <div class="form-group">
                            <label>
                                DataPrefix: (NOT IMPLEMENTED)
                                <input type="number" @bind-value:event="onchange" @bind-value="thisManData.DataPrefix" />
                            </label>
                        </div>

                        <div class="form-group">
                            <label>
                                Mask: (NOT IMPLEMENTED)
                                <input type="number" @bind-value:event="onchange" @bind-value="thisManData.Mask" />
                            </label>
                        </div> -->
                    </div>
                }
            }
        </div>

        <!--  Optional Services -->

        <div class="form-group" style="background: #F5EEF8;">
            <p>OptionalServices: </p>
            <button class="btn btn-outline-success" onclick="@(() => AddService())" type="button">Add Optional Service</button>

            @if (Options.OptionalServices != null)
            {
                @for (var i = 0; i < Options.OptionalServices.Count; i++)
                {
                    var localI = i;
                    <div>
                        <button class="btn btn-outline-danger" onclick="@(() => RemoveService(localI))" type="button">Remove Service</button>

                        <label>
                            Service:
                            <input type="text" value="@Options.OptionalServices[localI]" @oninput="arg => OnServiceTextChanged(localI, arg)" />
                        </label>
                    </div>
                }
            }
        </div>

        <div>
            <div class="form-group">
                <label>
                    Service UUID:
                </label>
                <input type="text" class="form-control" @bind-value:event="onchange" @bind-value="ServiceUuid" />
            </div>
        </div>
    }

    <button class="btn btn-success" disabled="@IsBusy" onclick="@RequestDevice" type="button">Request Device</button>
</div>